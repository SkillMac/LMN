import os

# SConscript("main/Scons")

env = Environment(TARGET_ARCH = "x86");

# scons config
env.Decider('MD5-timestamp')
env.SetOption('implicit_cache', 1)

# project
dir_main = Glob("./main/*.cpp") + Glob("./thirdparty/glad/src/*.c");
env.Append(CPPPATH = [
	'./thirdparty/glad/include',
	'./thirdparty/glad/src',
	'./thirdparty/glfw/include',
])
env.AppendUnique(CCFLAGS=['/MT', '/Gd', '/GR', '/nologo'])
env.AppendUnique(CXXFLAGS = ['/TP','/EHsc','/Gd','/W3','/Zc:wchar_t','/Zc:inline'])
env.Append(LIBPATH = ['./thirdparty/glfw/lib-vc2015',])
env.Append(LIBS = ['glfw3','opengl32'])
# env.Append()


# windows sdk
env.Append(CPPPATH = [os.getenv("WindowsSdkDir") + "/Include"])
env.Append(LIBPATH = [os.getenv("WindowsSdkDir") + "/Lib"])

# msvc 
env.Append(CPPPATH = [p for p in os.getenv("INCLUDE").split(";")])
env.Append(LIBPATH = [p for p in os.getenv("LIB").split(";")])
#lib64 = ["kernel32","user32","gdi32","winspool","comdlg32","advapi32","shell32","ole32","oleaut32","uuid","odbc32","odbccp32","opengl32"]

lib = [
"kernel32","user32","gdi32","winspool","comdlg32","advapi32",
"shell32","ole32","oleaut32","uuid","odbc32","odbccp32","msvcrt"]#,"libcmt"]#"msvcrt","libcmt"]
env.Append(LIBS = lib)
env.Append(CPPDEFINES = ["_MBCS",'WIN32', 'MSVC'])

# link
env.Append(LINKFLAGS=['/MACHINE:X86'])
env.Append(LINKFLAGS=['/NODEFAULTLIB:"libcmt.lib"'])

## debug
env.Append(LINKFLAGS=['/INCREMENTAL','/DEBUG','/SUBSYSTEM:CONSOLE'])


# env['bits'] = '32'
# env["x86_libtheora_opt_vc"] = True

env.Program("Vker", dir_main)
